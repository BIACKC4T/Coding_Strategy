#nullable enable


namespace CodingStrategy.Entities.Runtime.CommandImpl
{
    using System.Collections.Generic;
    using CodingStrategy.Entities.BadSector;
    using CodingStrategy.Entities.Board;
    using Robot;
    using Statement;

    public class InstallMalwareBadSectorCommand : AbstractCommand
    {
        public static int installNum=0;
        private readonly List<Coordinate> _coordinates=new();

        public InstallMalwareBadSectorCommand(string id="10", string name="멀웨어 설치", int enhancedLevel=1, int grade=3)
        : base(id, name, enhancedLevel, grade, 0)
        {
        }

        public override ICommand Copy(bool keepStatus = true)
        {
            if(!keepStatus)
            {
                return new InstallMalwareBadSectorCommand();
            }
            return new InstallMalwareBadSectorCommand(Id, Info.Name, Info.EnhancedLevel, Info.Grade);
        }
        public IBadSectorDelegate InstallMalwareBadSector(IBoardDelegate boardDelegate, IRobotDelegate robotDelegate)
        {
            return new MalwareBadSector(robotDelegate.Id+"-"+installNum++, boardDelegate, robotDelegate);
        }

        public override bool Invoke(params object[] args)
        {
            throw new System.NotImplementedException();
        }

        public override bool Revoke(params object[] args)
        {
            throw new System.NotImplementedException();
        }

        protected override void AddStatementOnLevel1(IRobotDelegate robotDelegate)
        {
            _coordinates.Add(new Coordinate(0,2));
            _commandBuilder.Append(new PointerStatement(robotDelegate, InstallMalwareBadSector, _coordinates));
        }

        protected override void AddStatementOnLevel2(IRobotDelegate robotDelegate)
        {
            _commandBuilder.Clear();
            _coordinates.Add(new Coordinate(-1,-1));
            _coordinates.Add(new Coordinate(1,-1));
            _commandBuilder.Append(new PointerStatement(robotDelegate, InstallMalwareBadSector, _coordinates));
        }

        protected override void AddStatementOnLevel3(IRobotDelegate robotDelegate)
        {
            _commandBuilder.Clear();
            _coordinates.Add(new Coordinate(0,-1));
            _coordinates.Add(new Coordinate(0,-2));
            _commandBuilder.Append(new PointerStatement(robotDelegate, InstallMalwareBadSector, _coordinates));
        }
    }
}